---
import { Font } from "astro:assets";
import "../styles/global.css";
---

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <Font cssVariable="--font-ibm" preload />
    <title>Astro Basics</title>

    <script>
      (function () {
        const getTheme = () => {
          const saved = localStorage.getItem("portfolioThemeMode");
          if (saved) return saved;

          if (
            window.matchMedia &&
            window.matchMedia("(prefers-color-scheme: dark)").matches
          ) {
            return "dark";
          }
          return "light";
        };

        const theme = getTheme();
        document.documentElement.classList.add(theme);
      })();
    </script>
  </head>
  <body
    class="bg-white dark:bg-[#3f3e3e] transition-colors duration-300 relative"
  >
    <slot />
  </body>
</html>

<style>
  html,
  body {
    margin: 0;
    width: 100%;
    height: 100%;
    font-family: var(--font-ibm);
    color: black;
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const themeMode = document.getElementById("themeMode");
    const html = document.documentElement;

    const mediaQuery = window.matchMedia("(prefers-color-scheme: dark)");
    mediaQuery.addEventListener("change", (e) => {
      const saved = localStorage.getItem("portfolioThemeMode");
      if (!saved) {
        const newTheme = e.matches ? "dark" : "light";
        html.className = newTheme;
        updateThemeButton(newTheme);
      }
    });

    function updateThemeButton(currentTheme: string) {
      if (themeMode) {
        const isDark = currentTheme === "dark";
        themeMode.innerText = isDark ? "light" : "dark";
      }
    }

    const currentTheme = html.classList.contains("dark") ? "dark" : "light";
    updateThemeButton(currentTheme);

    if (themeMode) {
      themeMode.addEventListener("click", () => {
        const isDark = html.classList.contains("dark");
        const newTheme = isDark ? "light" : "dark";

        html.className = newTheme;
        localStorage.setItem("portfolioThemeMode", newTheme);
        updateThemeButton(newTheme);
      });
    }
  });
</script>
